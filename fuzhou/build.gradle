apply plugin: 'com.android.library'
// must be applied after your artifact generating plugin (eg. java / com.android.library)
//apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.github.dcendents.android-maven'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //room
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$room_version"
//    implementation rootProject.ext.room['runtime']
//    implementation rootProject.ext.room['rxjava2']
//    annotationProcessor rootProject.ext.room['compiler']
    //gson
    implementation rootProject.ext.gson['gson']
    androidTestImplementation rootProject.ext.test['junit']
    androidTestImplementation rootProject.ext.test['runner']
    androidTestImplementation rootProject.ext.test['rules']
}
